rc-status
#Print some status of started services

screen
#Clean screen

eix-sync
#Emerge sync

screen -dr
#Unknown?? > Needs to be executed

htop
#Shows proceses and status

uname -a
#Shows kernel version

emerge -uDNav --keep-going world
#Update

eselect kernel list

eselect kernel set 5

genkernel --kernel-config=/etc/kernels/kernel-config-x86_64-3.10.53 --bootloader=grub --install kerneldo

vi /root/k5login
#editing users that can have root access to the 

tnm-ci1||tnm-ci2||tnm-ci3||tnm-ci4

MD=Tnm Server/ME=172.21.1.10/PTP=client:1:5:11-12

#Check Linux
cat /etc/*-release

#Installing MegaCli

rpm -ivh http://mirror.cogentco.com/pub/misc/MegaCli-8.07.14-1.noarch.rpm

#Running MegaCli:
MegaCli -ShowSummary -aALL | awk '/Hardware/,/Storage/' | grep -e Connector -e "State              :"

alias MegaCli="/opt/MegaRAID/MegaCli/MegaCli64"

#Checking drive info in MegaCli, 252 is a Enclosure Device ID, 1 is a Slot Number!
MegaCli -PDInfo -PhysDrv [252:1] -aALL

#List all comp in a local network
nmap -sP 192.168.0.1/24

#Check open port on some machine
nmap -v -A macine-ip-or-hostname

#add hostname to be recognised instead of ip address
vi /etc/hosts

#Upgrade nodes with latest from 28
#login to the node
mibsh
swu -C upgrade all all 192.168.201.63/tftproot/remote/enm001a-r28a-rel-latest.spec

#Provjera jel neki comp na merezi ziv i radi li
nslookup 172.21.1.100

#se-artif-prd.infinera.com
#admin
#Infinera99!

#Combinations
#admin/password
#admin/admin > jira

#mounting files on a files directory
sudo mount files.transmode.se:/files /net/files

#Node cleanup procedure (for development nodes) > workspace
mibsh
backup::file
delete conf*
swu reboot all


#Gentoo maintenance
sudo eix-sync
sudo emerge -uDNav world --keep-going
sudo dispatch-conf
uname -a
eselect kernel list
eselect kernel xx
gkernel --kernel-config=/etc/kernels/kernel-config-x86_64-4.0.4 --bootloader=grub --install kernel
cd /boot/
ls
rm -f kernel-gernel
vim grub/grub.conf
emerge -ac

files.transmode.se:/files on /net/files type nfs (rw,relatime,vers=3,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=krb5i,mountaddr=192.168.201.12,mountvers=3,mountport=55324,mountproto=udp,local_lock=none,addr=192.168.201.12)

#Gentoo check for installed software:
sudo equery check '*hipchat*'

#Gentoo uninstall sw
emerge --unmerge package_name

#Check hostname
hostname -f

#Advanced copy (copy content from dir1 to dir2)
rsync -avzh /dir1 /dir2

#Check Linux version
lsb_release -a

#Check who was the last one logged in
last

#check available iunits
df -i

#remove X in gentoo:
rc-update del xdm



=== Gradle Cookbook ===
gradle clean compile Java
gradle cleanIdea idea
IJ: > Rebuild project
IJ: File > Invalidate Caches/Restart
gradle get Java Agents
rm -rf /home/mmorozin/.gradle/caches
gradle --refresh-dependencies
refresh gradle
gradle test
gradle afterideCompile test
gradle clean test integTest


=== IntelliJ Cool Features ===
Crtl + Alt + O > Oprimise imports
Ctrl + alt + l > Auto-intent lines

=== CentOS select Java version ===
alternatives --config java

Jenkins Firefighting 2016-12-15
> Installed JavaMemory plugin on a jenkins > Helped a little
> sw-jenkins-m

> /etc/puppet  #all config for puppet
> manifest/site.pp
> bin/start_puppet_dashboard
> localhost:3000 > Dashoboard #

> /etc/init.d/jenkins
>Jenkins high availability? 

=== Remove ICED-TEA JAVA ===
eix iced
emerge 

#Grep all files in a folder for a string
grep -rni "string" *

#List all affected files in a specific RND number
git log --name-status --grep="RND-10643" | grep java | sort | uniq

#Manual adding node in a DB
INSERT INTO `mlsnmembers` VALUES (3,'172.21.1.22',0,0,'0');
INSERT INTO `nodes` VALUES ('172.21.1.22',1,1,0,'','Network',0,1,10,60,0,'public','oper','168197104041099169211137034231225041250025166208',0,'mms','111031031141017214122228',1,'oper','107170192195180188169044','',NULL,3,0,'','',0,NULL,NULL,'',2022);
INSERT INTO `subnetmembers` VALUES (1,'172.21.1.22',143,228,1,'');

#Check gentoo news
eselect news read



#### MYSQL Code for adding 4 nodes in tnmdb ####
mysql -uroot -proot tnmdb -e "
mysql -uroot -proot tnmdb -e "INSERT INTO mlsnmembers VALUES (1,'172.21.1.24',0,0,'0');"
mysql -uroot -proot tnmdb -e "INSERT INTO subnetmembers VALUES (1,'172.21.1.24',150,200,1,'');"
mysql -uroot -proot tnmdb -e "INSERT INTO nodes VALUES ('172.21.1.24',1,1,0,'','Network',0,1,10,60,0,'public','oper','168197104041099169211137034231225041250025166208',0,'mms','111031031141017214122228',1,'oper','107170192195180188169044','',NULL,3,0,'','',0,NULL,NULL,'',2022);"

mysql -uroot -proot tnmdb -e "INSERT INTO mlsnmembers VALUES (2,'172.21.1.25',0,0,'0');"
mysql -uroot -proot tnmdb -e "INSERT INTO subnetmembers VALUES (1,'172.21.1.25',350,200,1,'');"
mysql -uroot -proot tnmdb -e "INSERT INTO nodes VALUES ('172.21.1.25',1,1,0,'','Network',0,1,10,60,0,'public','oper','168197104041099169211137034231225041250025166208',0,'mms','111031031141017214122228',1,'oper','107170192195180188169044','',NULL,3,0,'','',0,NULL,NULL,'',2022);"

mysql -uroot -proot tnmdb -e "INSERT INTO mlsnmembers VALUES (3,'172.21.1.26',0,0,'0');"
mysql -uroot -proot tnmdb -e "INSERT INTO subnetmembers VALUES (1,'172.21.1.26',150,400,1,'');"
mysql -uroot -proot tnmdb -e "INSERT INTO nodes VALUES ('172.21.1.26',1,1,0,'','Network',0,1,10,60,0,'public','oper','168197104041099169211137034231225041250025166208',0,'mms','111031031141017214122228',1,'oper','107170192195180188169044','',NULL,3,0,'','',0,NULL,NULL,'',2022);"

mysql -uroot -proot tnmdb -e "INSERT INTO mlsnmembers VALUES (4,'172.21.1.27',0,0,'0');"
mysql -uroot -proot tnmdb -e "INSERT INTO subnetmembers VALUES (1,'172.21.1.27',350,400,1,'');"
mysql -uroot -proot tnmdb -e "INSERT INTO nodes VALUES ('172.21.1.27',1,1,0,'','Network',0,1,10,60,0,'public','oper','168197104041099169211137034231225041250025166208',0,'mms','111031031141017214122228',1,'oper','107170192195180188169044','',NULL,3,0,'','',0,NULL,NULL,'',2022);"



cat /var/log/tnm/mainserver_events.log
tail -f /var/log/tnm/mainserver_events.log


#Delete:
mysql -uroot -proot tnmdb -e "delete from mlsnmembers where memberip like '172.21.1.%';"
mysql -uroot -proot tnmdb -e "delete from subnetmembers where subnetid = 1;"
mysql -uroot -proot tnmdb -e "delete from nodes where ipaddress like '172.21.1.%';"

#Check
mysql -uroot -proot tnmdb -e "select * from mlsnmembers;"
mysql -uroot -proot tnmdb -e "select * from subnetmembers;"
mysql -uroot -proot tnmdb -e "select * from nodes;"



# ======= Jpg file renamer ======
# This script renames all files in a directory from custom name xxx.jpg to creation date yyyymmdd_hhmmss.jpg
# of the image. This info is taken from jpg metadata by command identify. Duplicated files will not be renamed
# and mp4 files with a same name as jpg will be renamed to the same name as jpg file.
for f in DSC*.JPG; do prefix=$(echo $f | awk -F"." '{print $1}'); file=$(identify -verbose $f | grep DateTime: | awk '{print $2"_"$3}'| sed 's/://g'); addon=""; while [ -f $file$addon.jpg ]; do echo "File $file$addon.jpg existsll!"; let "addon=$addon+1"; done; sudo mv $f $file$addon.jpg; if [ -f $prefix.mp4 ]; then sudo mv $prefix.mp4 $file$addon.mp4; fi; done
# Improvements:
# -Number duplicated files with extra number: yyyymmdd_hhmmss.jpg -> yyyymmdd_hhmmss_1.jpg OR yyyymmdd_hhmmss_2.jpg ...



for f in IMAG*.jpg; 
	do 
		prefix=$(echo $f | awk -F"." '{print $1}'); 
		file=$(identify -verbose $f | grep DateTime: | awk '{print $2"_"$3}'| sed 's/://g'); 
		addon=""; 
		while [ -f $file$addon.jpg ]; 
			do; 
				echo "File $file$addon.jpg existsll!"; 
				let "addon=$($addon+1)"; 
			done; 
		sudo mv $f $file$addon.jpg; 
		if [ -f $prefix.mp4 ]; 
			then 
				sudo mv $prefix.mp4 $file$addon.mp4; 
		fi ; 
	done

# === Testing with gradle ===
# Build:
gradle testClasses --parallel --refresh-dependencies --max-workers=8
# Unit Test
gradle unit Test --parallel


# ==== Other Unrelated stuff ====
eix-sync
eselect news read


lmoroz@optinet
TnFAQz94


->Inet->Router
			-Cable
			->RbPi (zyon)
			->NAS
			-WiFi
			->RbPi3
			->Chromecast
			->Compgit pull --
			->MBA13
			->A3
			->S5
			->iA2
----------------------------
> Tot: 2fix, 7 wifi


# Docker commands
docker ps
docker ps -a
docker rm
docker rmi
docker run

docker run -d --privileged artifactory.transmode.se/tm3k/trunk-hostenv:25.0
docker run -d --privileged artifactory.transmode.se/tm3k/trunk-hostenv:latest

#Running bash commands inside docker container:
docker exec -it <container_id_or_name> bash

# Resize home drive on linux machines (nmci)
pvs
lvdisplay
lvextend -l +7681 /dev/lvm/home
lvextend -L+20G /dev/lvm/home
xfs_growfs /dev/lvm/home

#This helps when you cannot remove dead docker containers
dmsetup udevcomplete_all
#Link: https://bugzilla.redhat.com/show_bug.cgi?id=1456138

# Start virtual interface:
ifconfig eth0:2 192.168.202.62/24 up

#Forced reboot
reboot -d

#Adding a node to DNA-M with a rest service:
curl -s -u admin:admin -X POST -H "application/json" "http://centos-mmorozin.transmode.se:8081/api/node/admin/172.21.1.11/Network";
curl -s -u admin:admin -X POST -H "application/json" "http://centos-mmorozin.transmode.se:8081/api/node/admin/172.21.1.10/Network";
curl -s -u admin:admin -X POST -H "application/json" "http://centos-mmorozin.transmode.se:8081/api/node/admin/172.21.1.22/Network";
curl -s -u admin:admin -X POST -H "application/json" "http://centos-mmorozin.transmode.se:8081/api/node/admin/172.21.1.23/Network";

#Installing specific java version in Gentoo:
sudo emerge =dev-java/oracle-jdk-bin-1.8.0.141

#Gentoo update config files
etc-update

#Starting exposed docker image
ifconfig eth0:1 172.16.15.248 netmask 255.255.252.0 up
docker run -d -p 172.16.15.248:80:80 0fdb06b39288

ifconfig eth0:2 172.16.15.249 netmask 255.255.252.0 up
docker run -d -p 172.16.15.249:80:80 0fdb06b39288


#Force stop jenkins job from jenkins console
Jenkins.instance.getItemByFullName("DNAM_MTOSI_TestSuite").getBuildByNumber(44).finish(hudson.model.Result.ABORTED, new java.io.IOException("Aborting build"));

##### WORKING CODE!!!!!!!!!!!!!!!!!!!! ##################
powershell -Command "& {$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(('{0}:{1}' -f 'admin','admin'))); Invoke-RestMethod -Headers @{Authorization=('Basic {0}' -f $base64AuthInfo)} -Uri http://tnm-windows2:8081/api/node/admin/172.16.15.248/Network -Method Post -ContentType 'application/json'}"


docker run -d --net=macvlan_bridge --ip=172.16.15.248 --mac-address 00:50:56:00:60:42 artifactory.transmode.se/tm3k/trunk-hostenv:25.0



#Create two docker containers which are exposed to external network:
#1. Create macvlan
docker network create -d macvlan --subnet=172.16.15.0/22 --gateway=172.16.12.1 -o parent=eth0 macvlan
#2. Start container
docker run -d --net=macvlan --ip=172.16.15.245 artifactory.transmode.se/tm3k/trunk-hostenv:25.0
docker run -d --net=macvlan --ip=172.16.15.248 artifactory.transmode.se/tm3k/trunk-hostenv:25.0

#Remove all docker containers
docker rm $(docker ps -a -q)

#Remove macvlan docker network




